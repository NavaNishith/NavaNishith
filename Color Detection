import cv2
import numpy as np
import pandas as pd

# Load the dataset from Kaggle
train_df = pd.read_csv('fruits_360_train.csv')

# Define the color ranges for red, blue, and green
color_ranges = {
    'ed': [(0, 0, 100), (10, 10, 255)],  # lower and upper bounds for red
    'blue': [(100, 0, 0), (140, 10, 255)],  # lower and upper bounds for blue
    'green': [(40, 100, 40), (80, 255, 255)]  # lower and upper bounds for green
}

# Function to detect colors in an image
def detect_colors(img):
    hsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)
    colors_detected = {}
    
    for color, (lower, upper) in color_ranges.items():
        mask = cv2.inRange(hsv, lower, upper)
        contours, _ = cv2.findContours(mask, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
        
        if len(contours) > 0:
            colors_detected[color] = True
        else:
            colors_detected[color] = False
    
    return colors_detected

# Load an image from the dataset
img_path = train_df.iloc[0]['image_path']
img = cv2.imread(img_path)

# Detect colors in the image
colors_detected = detect_colors(img)

print("Colors detected:")
for color, detected in colors_detected.items():
    if detected:
        print(f"  {color}")
